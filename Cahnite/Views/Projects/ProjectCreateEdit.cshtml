@model Cahnite.Models.ProjectViewModel

@{

    Layout = "~/Views/Shared/_Layout.cshtml";

    if (Model.ID == 0)
    {
        ViewBag.Title = "Create";
        ViewBag.header = "Create";
        
    }
    else
    {
        ViewBag.Title = "Edit";
        ViewBag.header = "Edit/Delete";
    }
}

<h2>@ViewBag.header @Model.Title</h2>

@if (Model.Publish == false)
{
    <h4 class="text-danger">
        <em>
            THIS POST IS UNPUBLISEHD
        </em>
    </h4>
}


@if (Model.ID != 0)
{
    <p>
        Created On: @Html.DisplayFor(p => p.CreatedOn)
    </p>
    <p>
        Edited On: @Html.DisplayFor(p => p.EditedOn)
    </p>
}


@if (Model.ID != 0)
{
    using (Html.BeginForm("ProjectDelete", "Projects"))
    {
        <div class="form-horizontal text-left">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ID)
            <button type="submit" class="btn btn-danger">Delete</button>
        </div>

    }
}


@using (Html.BeginForm("ProjectCreateEdit", "Projects", FormMethod.Post, new { @id = "projectForm" }))
{
    @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Intro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Intro, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Intro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BodyHtml, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BodyHtml, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BodyHtml, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Favorite, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Favorite)
                        @Html.ValidationMessageFor(model => model.Favorite, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @if (Model.ID != 0)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.RePublish, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.RePublish)
                            @Html.ValidationMessageFor(model => model.RePublish, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }


                <div class="form-group">
                    @Html.LabelFor(model => model.Publish, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Publish)
                            @Html.ValidationMessageFor(model => model.Publish, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>


            </div>
        </div>
}


<div>
    @Html.ActionLink("Cancel/Back to List", "Index")
</div>


